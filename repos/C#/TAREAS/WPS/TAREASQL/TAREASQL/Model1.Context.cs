//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TAREASQL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LaboratoriosEntities : DbContext
    {
        public LaboratoriosEntities()
            : base("name=LaboratoriosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tabla_Laboratorios> Tabla_Laboratorios { get; set; }
        public virtual DbSet<Tabla_Usuarios> Tabla_Usuarios { get; set; }
    
        public virtual int AGREGAR_LAB(string lAB_RED, string lAB_COMP1, string lAB_COMP2)
        {
            var lAB_REDParameter = lAB_RED != null ?
                new ObjectParameter("LAB_RED", lAB_RED) :
                new ObjectParameter("LAB_RED", typeof(string));
    
            var lAB_COMP1Parameter = lAB_COMP1 != null ?
                new ObjectParameter("LAB_COMP1", lAB_COMP1) :
                new ObjectParameter("LAB_COMP1", typeof(string));
    
            var lAB_COMP2Parameter = lAB_COMP2 != null ?
                new ObjectParameter("LAB_COMP2", lAB_COMP2) :
                new ObjectParameter("LAB_COMP2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AGREGAR_LAB", lAB_REDParameter, lAB_COMP1Parameter, lAB_COMP2Parameter);
        }
    
        public virtual int AGREGAR_USUARIO(string lAB_RED, string lAB_COMP1, string lAB_COMP2)
        {
            var lAB_REDParameter = lAB_RED != null ?
                new ObjectParameter("LAB_RED", lAB_RED) :
                new ObjectParameter("LAB_RED", typeof(string));
    
            var lAB_COMP1Parameter = lAB_COMP1 != null ?
                new ObjectParameter("LAB_COMP1", lAB_COMP1) :
                new ObjectParameter("LAB_COMP1", typeof(string));
    
            var lAB_COMP2Parameter = lAB_COMP2 != null ?
                new ObjectParameter("LAB_COMP2", lAB_COMP2) :
                new ObjectParameter("LAB_COMP2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AGREGAR_USUARIO", lAB_REDParameter, lAB_COMP1Parameter, lAB_COMP2Parameter);
        }
    
        public virtual int EDITAR_LAB(Nullable<long> iD, string lAB_RED, string lAB_COMP1, string lAB_COMP2)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var lAB_REDParameter = lAB_RED != null ?
                new ObjectParameter("LAB_RED", lAB_RED) :
                new ObjectParameter("LAB_RED", typeof(string));
    
            var lAB_COMP1Parameter = lAB_COMP1 != null ?
                new ObjectParameter("LAB_COMP1", lAB_COMP1) :
                new ObjectParameter("LAB_COMP1", typeof(string));
    
            var lAB_COMP2Parameter = lAB_COMP2 != null ?
                new ObjectParameter("LAB_COMP2", lAB_COMP2) :
                new ObjectParameter("LAB_COMP2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EDITAR_LAB", iDParameter, lAB_REDParameter, lAB_COMP1Parameter, lAB_COMP2Parameter);
        }
    
        public virtual int ELIMINAR_LAB(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ELIMINAR_LAB", iDParameter);
        }
    
        public virtual int ELIMINAR_USUARIO(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ELIMINAR_USUARIO", iDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
